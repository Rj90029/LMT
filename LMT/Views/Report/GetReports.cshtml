@model LMT.Models.Model.DetailedReport
@{
    ViewBag.Title = "GetReports";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container center_div">
    <h2 style="text-align:center">Get Reports</h2>
    <div class="col-md-12 UserHead">
        <div class="col-md-2">
            <input type="button" value="Employee Master Report" class="btn btn-success" onclick="window.location.href = '@Url.Action("EmployeeMaster", "Report")'" />
        </div>
       
    </div>
    <div class="col-md-12">

    </div>
    @using (Html.BeginForm("GetDetailedReport", "Report", FormMethod.Post))
    { 
        
        <div class="col-md-12">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.UserName, (SelectList)ViewBag.UserList, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="col-md-12">
            @Html.LabelFor(model => model.RequestType, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.RequestType, (SelectList)ViewBag.TypeList,"-Select a request type-", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestType, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-12">
            @Html.LabelFor(model => model.StatusSelected, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.StatusSelected, ViewBag.Status as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group col-md-12">
            @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                <div id="todateval" class="text-danger"></div>
            </div>
        </div>
        <div class="form-group col-md-12 UserHead">
            <div class="col-md-3">
               <input id="btnShowReport" type="button" value="Show Report" class="btn btn-success" />
            </div>
        </div>
        <div id="dvTable" class="form-group col-md-12">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>
                           <h3>Employee ID</h3>
                        </th>
                        <th>
                            <h3>Employee Name</h3>
                        </th>
                        <th>
                            <h3>Request Date</h3>
                        </th>
                        <th>
                            <h3>Status</h3>
                        </th>
                    </tr>
                </thead>
                <tbody id="grid-view">
                </tbody>
            </table>
        </div>
        <div class="form-group col-md-12 UserHead" id="btnSubmit">
            <div class="col-md-3">
                <input id="btnShowReport" type="submit" value="Export to Excel" class="btn btn-success" />
            </div>
        </div>
    }
   
</div>
@Html.Partial("PartialReport")
<script type="text/javascript">
    $(document).ready(function () {
        $("#dvTable").hide();
        $("#btnSubmit").hide();
        $('#UserName').change(function () {
            $("#dvTable").hide();
        })
        $('#RequestType').change(function () {
            $("#dvTable").hide();
        })
        $('#StatusSelected').change(function () {
            $("#dvTable").hide();
        })
        $('#FromDate').change(function () {
            $("#dvTable").hide();
        })
        $("#ToDate").change(function () {
            $("#dvTable").hide();
            $("#todateval").text("");
            var td = $("#ToDate").val().split("/");
            var fd = $("#FromDate").val().split("/");
            var tdDate = new Date(td[2], td[1] - 1, td[0]);
            var fdDate = new Date(fd[2], fd[1] - 1, fd[0]);
            if (fdDate > tdDate) {
                $("#todateval").text("To Date should be greater than From Date");
                $("#ToDate").val("");
            }

        });

        $('#btnShowReport').click(function () {
            var params = {
                UserName: $('#UserName').val(),
                RequestType: $('#RequestType').val(),
                StatusSelected: $('#StatusSelected').val(),
                FromDate: $('#FromDate').val(),
                ToDate: $('#ToDate').val()
            };
            if($('#RequestType').val() == ''){
                $('span[data-valmsg-for="RequestType"]').text('Request type is required');
                return;
            }
            if ($('#FromDate').val() == '') {
                $('span[data-valmsg-for="FromDate"]').text('Date is required');
                return;
            }
            if ($('#ToDate').val() == '') {
                $('span[data-valmsg-for="ToDate"]').text('Date is required');
                return;
            }
            
            $.ajax({
                url: '@Url.Action("ShowGrid","Report")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(params),
                dataType: "json",
                success: function (data) {
                    var row = "";
                    var count = 0;
                    var name = $('#UserName').val();
                    var status = $('#StatusSelected').val();
                    $("#grid-view").html(row);
                    $.each(data, function (index, item) {
                        row += "<tr><td>" + item.EmpID + "</td><td>" + item.Name + "</td><td>" + item.RequestDate + "</td><td>" + item.Status + "</td></tr>";
                    });
                    if (Object.keys(data).length == 0) {
                        row += "<tr><td colspan='2'>Records found:</td><td colspan='2'> 0</td></tr>";
                    }
                    $("#grid-view").html(row);
                    $("#dvTable").show();
                    $("#btnSubmit").show();
                },
                error: function (result) {
                    alert(result);
                }
            });
            $("#dvTable").show();
        });
    });

</script>

